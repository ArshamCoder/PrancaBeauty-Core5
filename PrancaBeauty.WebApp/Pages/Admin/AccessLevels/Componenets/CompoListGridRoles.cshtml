@page "/Admin/AccessLevel/Compo/ListGridRoles"
@using PrancaBeauty.WebApp.Models.ViewModel
@model PrancaBeauty.WebApp.Pages.Admin.AccessLevels.Componenets.CompoListGridRolesModel
@{ }
@if (Model.Input.AccessLevelId == null)
{
<script>
    function IsSelected(_Id) {
        return '';
    }
</script> }
            else
            {
<script>
        function IsSelected(_Id) {
            var RolesId = '@string.Join(",", (string[])ViewData["SelectedRoles"])';
            if (RolesId.includes(_Id)) {
                return 'checked';
            } else {
                return '';
            }
        }
</script>}
<script>

    function onDataBound(e) {
        var data = this.dataSource.data();
        $.each(data, function (i, row) {
            if (row.get("HasChild") == false) {
                $('tr[data-uid="' + row.uid + '"]').find(".k-hierarchy-cell a").remove();
            }
        });

        // غیر فعال سازی
        // Lazy load
        // روی فلش بغل هر سطح دسترسی کلیک می کند و بازش میکنه
        // و دوباره می بندش و این طوری لیزی لود غیر فعال میشه
        this.expandRow(this.tbody.find("tr.k-master-row"));
        this.collapseRow(this.tbody.find("tr.k-master-row"));
    }
</script>

<div class="k-lang">
    @(Html.Kendo()
          .Grid<VmCompoListGridRolesModel>()
          .Name("ListRoles")
          .DefaultSettings(Localizer)
          .Pageable(a=>a.Enabled(false))
          .Sortable(false)
          .Columns(col=> {
              col.Bound(a => a.Id).Title(" ").Sortable(false).Width(50).ClientTemplate("<input #=IsSelected(Id)# value='#=Id#' name='Input.Roles' class='k-checkbox' type='checkbox'/>");
              col.Bound(a => a.PageName).Sortable(false);
              col.Bound(a => a.Name).Sortable(false);
              col.Bound(a => a.Description).Sortable(false);
          })
          .PersistSelection() //چک باکس میاره برای انتخاب
          .Events(a=> {
              a.DataBound("onDataBound");
          })
          .ClientDetailTemplateId("ListAccessLevelTmpl")
          .DataSource(ds=> ds.Ajax()
                             .Model(model=> model.Id(a=>a.Id))
                             .Read(read=> read.Url("/Admin/AccessLevel/Compo/ListGridRoles?handler=Read").Data("forgeryToken"))))
</div>

<script id="ListAccessLevelTmpl" type="text/kendo-tmpl">
    @(Html.Kendo()
          .Grid<VmCompoListGridRolesModel>()
          .Name("ListRoles_Child#=Id#")
          .DefaultSettings(Localizer)
          .Pageable(a=>a.Enabled(false))
          .Sortable(false)
          .Columns(col=> {
              col.Bound(a => a.Id).Title(" ").Sortable(false).Width(50).ClientTemplate("<input \\#=IsSelected(Id)\\# value='\\#=Id\\#' name='Input.Roles' class='k-checkbox' type='checkbox'/>");
              col.Bound(a => a.PageName).Sortable(false);
              col.Bound(a => a.Name).Sortable(false);
              col.Bound(a => a.Description).Sortable(false);
          })
          .PersistSelection()
          .Events(a=> {
              a.DataBound("onDataBound");
          })
          .ClientDetailTemplateId("ListAccessLevelTmpl_ChildTmpl")
          .DataSource(ds=> ds.Ajax()
                             .Model(model=> model.Id(a=>a.Id))
                             .Read(read=> read.Url("/Admin/AccessLevel/Compo/ListGridRoles?handler=Read&parentId=#=Id#").Data("forgeryToken")))
          .ToClientTemplate())
</script>

<script id="ListAccessLevelTmpl_ChildTmpl" type="text/kendo-tmpl">
     @(Html.Kendo()
          .Grid<VmCompoListGridRolesModel>()
          .Name("ListRoles_Child#=Id#")
          .DefaultSettings(Localizer)
          .Pageable(a=>a.Enabled(false))
          .Sortable(false)
          .Columns(col=> {
              col.Bound(a => a.Id).Title(" ").Sortable(false).Width(50).ClientTemplate("<input \\#=IsSelected(Id)\\# value='\\#=Id\\#' name='Input.Roles' class='k-checkbox' type='checkbox'/>");
              col.Bound(a => a.PageName).Sortable(false);
              col.Bound(a => a.Name).Sortable(false);
              col.Bound(a => a.Description).Sortable(false);
          })
          .PersistSelection()
          .Events(a=> {
              a.DataBound("onDataBound");
          })
          .ClientDetailTemplateId("ListAccessLevelTmpl_ChildTmpl_Child")
          .DataSource(ds=> ds.Ajax()
                             .Model(model=> model.Id(a=>a.Id))
                             .Read(read=> read.Url("/Admin/AccessLevel/Compo/ListGridRoles?handler=Read&parentId=#=Id#").Data("forgeryToken")))
          .ToClientTemplate())
</script>

<script id="ListAccessLevelTmpl_ChildTmpl_Child" type="text/kendo-tmpl">
     @(Html.Kendo()
          .Grid<VmCompoListGridRolesModel>()
          .Name("ListRoles_Child#=Id#")
          .DefaultSettings(Localizer)
          .Pageable(a=>a.Enabled(false))
          .Sortable(false)
          .Columns(col=> {
              col.Bound(a => a.Id).Title(" ").Sortable(false).Width(50).ClientTemplate("<input \\#=IsSelected(Id)\\# value='\\#=Id\\#' name='Input.Roles' class='k-checkbox' type='checkbox'/>");
              col.Bound(a => a.PageName).Sortable(false);
              col.Bound(a => a.Name).Sortable(false);
              col.Bound(a => a.Description).Sortable(false);
          })
          .PersistSelection()
          .Events(a=> {
              a.DataBound("onDataBound");
          })
          .DataSource(ds=> ds.Ajax()
                             .Model(model=> model.Id(a=>a.Id))
                             .Read(read=> read.Url("/Admin/AccessLevel/Compo/ListGridRoles?handler=Read&parentId=#=Id#").Data("forgeryToken")))
          .ToClientTemplate())
</script>
