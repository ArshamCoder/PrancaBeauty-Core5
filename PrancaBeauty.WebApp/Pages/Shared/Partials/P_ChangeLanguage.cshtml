@inject ILanguageApplication _LanguageApplication;
@using PrancaBeauty.Application.Apps.Language

@{ var qLang = await _LanguageApplication.GetAllLanguageForSiteLangAsync(); }

<a href="#">
    <img class="lang-flag" src="@(await _LanguageApplication.GetFlagUrlByCodeAsync(await _LanguageApplication.GetCodeByAbbrAsync(GetAbbr())))" />
    @(await _LanguageApplication.GetNativeNameByCodeAsync(await _LanguageApplication.GetCodeByAbbrAsync(GetAbbr()))) <i class="icon-right ion-ios-arrow-down"></i>
</a>
<ul class="dropdown_language">
    @foreach (var item in qLang)
    {
<li><a href="@SetLang(item.Abbr)">@item.NativeName</a></li>}
</ul>

@functions { string SetLang(string abbr)
    {
        var request = Context.Request;

        string host = request.Scheme + "://" + request.Host;
        string path = request.Path;
        string parameters = request.QueryString.HasValue ? request.QueryString.Value : "";

        List<string> splitPath = path.Trim('/').Split("/").ToList();
        splitPath.RemoveAt(0);

        path = "/" + abbr + "/" + string.Join("/", splitPath);

        return host + path + parameters;
    }

    string GetAbbr()
    {
        var request = Context.Request;
        string path = request.Path;

        if (path.Trim('/') == "")
            return "fa";

        return path.Trim('/').Split("/")[0];
    } }
